@use "./sizes.scss";

.footer {
  position: absolute;
  left: 0;
  bottom: 0;
  width: 100%;
  padding: 18px calc(18px + sizes.$inset-right) calc(18px + sizes.$inset-bottom)
    calc(18px + sizes.$inset-left);
  box-sizing: border-box;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: flex-end;
  color: var(--footer-version-color);
  font-size: 1rem;

  p {
    color: var(--footer-version-color);
    margin: 0;
    padding: 0;
  }

  p.copyright,
  a {
    color: var(--footer-copyright-color);
  }

  @media screen and (min-aspect-ratio: 5 / 3) {
    p br {
      display: none;
    }
  }

  a {
    text-decoration: none;
    border-bottom: 1px solid;
  }

  a:active,
  a:hover {
    color: var(--footer-link-hover-color);
  }
}

.screen {
  position: fixed;
  top: 0;
  left: 0;
  overflow: hidden;
  height: 100%;
  width: 100%;
  box-shadow: var(--screen-box-shadow);
  background: var(--main-bg-color);

  transition: background-color 50ms;

  animation-name: animate-appear;
  animation-delay: 100ms;
  animation-duration: 500ms;
  animation-fill-mode: backwards;

  &.disappear {
    animation-name: animate-disappear;
    animation-delay: 100ms;
    animation-duration: 500ms;
    animation-fill-mode: forwards;
  }
}

@keyframes animate-appear {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 100;
  }
}
@keyframes animate-disappear {
  0% {
    opacity: 100;
  }
  100% {
    opacity: 0;
  }
}

.game-button {
  width: calc(0.5 * sizes.$button-scale);
  height: calc(0.5 * sizes.$button-scale);
  padding: calc(0.25 * sizes.$button-scale);
  cursor: pointer;
  border-radius: 100%;
  box-shadow: var(--button-box-shadow);

  transform: scale(1);
  transition-property: transform;
  transition-duration: 100ms;
  fill: var(--button-fg-color);
  background: var(--button-bg-color);

  &.game-button-pressed {
    background: var(--button-bg-pressed-color);
  }

  svg {
    width: 100%;
    aspect-ratio: 1 / 1;
  }

  @media (hover) {
    &:hover {
      background: var(--button-bg-hover-color);
    }
  }
}

.game-toggle {
  display: flex;
  align-items: center;
  cursor: pointer;

  .icon {
    margin-left: 0.7vw;
    width: calc(0.425 * sizes.$button-scale);
    height: calc(0.425 * sizes.$button-scale);
    fill: var(--toggle-icon-color);

    svg {
      width: 100%;
      aspect-ratio: 1 / 1;
    }
  }

  .toggle-box {
    flex-grow: 1;
    border-radius: sizes.$button-scale;
    padding: max(0.3vw, 4px);
    background: var(--toggle-bg-disabled-color);
    display: flex;
    flex-direction: row;
  }

  &.threeway .wrap {
    flex-grow: 1;
    display: flex;
    flex-direction: row;
    border-radius: sizes.$button-scale;
    background: var(--toggle-bg-disabled-color);
    .toggle-box {
      background: transparent;
    }
  }
  &.threeway .toggle-box.a {
    justify-content: flex-start;
    background: transparent;
  }
  &.threeway .toggle-box.b {
    justify-content: flex-end;
    background: transparent;
  }

  .toggle-ball {
    border-radius: 100%;
    width: calc(0.425 * sizes.$button-scale);
    height: calc(0.425 * sizes.$button-scale);
    background: var(--toggle-fg-disabled-color);
    box-shadow: var(--button-box-shadow);
  }

  .toggle-ball-icon {
    width: calc(0.425 * sizes.$button-scale - max(0.3vw, 4px));
    height: calc(0.425 * sizes.$button-scale - max(0.3vw, 4px));
    fill: var(--toggle-icon-color);
    border-radius: 100%;
    padding: max(0.3vw, 4px);

    svg {
      width: 100%;
      aspect-ratio: 1 / 1;
    }
  }

  &.enabled {
    .toggle-box {
      justify-content: flex-end;
      background: var(--toggle-bg-enabled-color);
    }
    .toggle-ball {
      background: var(--toggle-fg-enabled-color);
    }
  }

  &.threeway.a .toggle-box.a,
  &.threeway.b .toggle-box.b {
    flex-grow: 1;
    flex-shrink: 0;
    background: var(--toggle-bg-enabled-color);
  }
  &.threeway.a .toggle-box.b,
  &.threeway.b .toggle-box.a {
    flex-grow: 0;
    flex-shrink: 1;
  }
  &.threeway.a .toggle-box.a .toggle-ball-icon,
  &.threeway.b .toggle-box.b .toggle-ball-icon {
    fill: var(--toggle-threeway-icon-enabled-color);
    background: var(--toggle-fg-enabled-color);
    box-shadow: var(--button-box-shadow);
  }
}

/* dropdown settings list */
.setting-row .option-wrap {
  position: relative;
  height: 100%;
}

/* dropdown menu */
.setting-row .dropdown-wrap {
  display: none;
  position: absolute;
  margin-top: 0.2rem;
  margin-bottom: 0.2rem;
  min-width: 180%;
  z-index: 1000;
  top: 100%;
}
.setting-row.upward .dropdown-wrap {
  bottom: 100%;
  top: auto;
}
.setting-row .dropdown {
  display: grid;
  justify-items: stretch;
  align-content: flex-start;
  grid-template-columns: 1fr 1fr;
  column-gap: calc(0.1 * sizes.$setting-row-option-scale);
  row-gap: calc(0.1 * sizes.$setting-row-option-scale);
  border-radius: calc(0.4 * sizes.$setting-row-option-scale);
  background: var(--settings-option-panel-bg-color);
  box-shadow: var(--dropdown-box-shadow);
  padding: calc(0.1 * sizes.$setting-row-option-scale);
  box-sizing: content-box;
}
.setting-row.open .dropdown-wrap {
  display: block;
}
.setting-row.count2,
.setting-row.count3,
.setting-row.count4 {
  .dropdown-wrap {
    width: 100%;
    min-width: 100%;
  }
  .dropdown {
    grid-template-columns: 1fr;
  }
}
.setting-row-option {
  display: grid;
  grid-template-areas:
    "example description"
    "example description";
  grid-template-columns: sizes.$setting-row-option-scale 1fr;
  grid-template-rows: 1fr 1fr;
  column-gap: calc(0.2 * sizes.$setting-row-option-scale);
  align-items: center;
  padding-left: calc(0.1 * sizes.$setting-row-option-scale);
  min-height: sizes.$setting-row-option-height;
  background: var(--settings-option-panel-bg-color);
  border: 2px solid transparent;
  border-radius: calc(0.4 * sizes.$setting-row-option-scale);
  box-sizing: border-box;
  cursor: pointer;
  transition: transform 0.1s;
  font-size: 0.9rem;
  @media (hover) {
    &:hover {
      background: var(--settings-option-panel-bg-hover-color);
    }
  }
}
.setting-row.language .setting-row-option {
  grid-template-areas: "description";
  grid-template-columns: 1fr;
  grid-template-rows: 1fr;
  min-height: 1.2em;
  padding-left: calc(0.4 * sizes.$setting-row-option-scale);
  p {
    margin: 0;
  }
}
.setting-row-option.current {
  box-shadow: var(--button-box-shadow);
  margin: 0;
  height: 100%;
}
.setting-row-option.current.changed {
  animation: 300ms linear setting-row-option-change-anim;
}
@keyframes setting-row-option-change-anim {
  0% {
  }
  10% {
    background: var(--settings-option-panel-bg-active-color);
  }
  50% {
    background: var(--settings-option-panel-bg-active-color);
  }
  100% {
  }
}
// background: var(--settings-option-panel-bg-active-color);
.setting-row-option .wrap-grid,
.setting-row-option > svg {
  grid-area: example;
  width: calc(0.76 * sizes.$setting-row-option-scale);
  height: calc(0.76 * sizes.$setting-row-option-scale);
  justify-self: center;
}
.setting-row-option > svg.palette {
  width: calc(0.66 * sizes.$setting-row-option-scale);
  height: calc(0.66 * sizes.$setting-row-option-scale);
}
.setting-row-option p {
  grid-area: description;
  padding: 0.2rem calc(0.1 * sizes.$setting-row-option-scale) 0.4rem 0;
  margin: 0;
}
.setting-row-option.selected,
.setting-row-option.selected:hover {
  border: 2px solid var(--settings-option-panel-border-active-color);
  background: var(--settings-option-panel-bg-active-color);
}
