@use "./colors.scss";

.screen.game-display {
  display: grid;
  grid-template-columns: 1fr calc(2 * (colors.$button-scale) + 6vw);
  grid-template-rows: 2fr min-content 2fr;
  grid-template-areas:
    "main-grid fill"
    "main-grid tile-stack"
    "main-grid counters";

  .main-grid {
    grid-area: main-grid;
  }

  .controls {
    grid-area: controls;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    background: #bbb;
    text-align: center;
    z-index: 1000;

    .buttons {
      order: 1;
      margin: 0 10px;
      display: flex;
      flex-direction: row;
    }
    .toggles {
      order: 2;
      margin: 10px 10px;
      display: flex;
      flex-direction: row;
      justify-content: center;
    }
  }

  .fill {
    grid-area: fill;
    background: #bbb;
  }

  .tile-stack {
    grid-area: tile-stack;
    background: #bbb;
    display: flex;
    flex-direction: column;
    justify-content: center;
  }

  .tile-counter-and-score {
    grid-area: counters;
    background: #bbb;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    text-align: center;
  }
}

.dropout-menu {
  position: absolute;
  right: 3vw;
  top: 3vw;
  display: flex;
  flex-direction: column;
  align-items: flex-end;
  border-radius: (colors.$button-scale);
  z-index: 10000;

  margin: -1vw;

  &.expanded {
    background: #f6f6f6;

    .game-button.dropout svg {
      rotate: 90deg;
    }
  }

  .game-button.dropout {
    margin: 1vw 1vw 0 0;
  }

  .game-button.dropout svg {
    transition: rotate 0.1s;
  }

  .items {
    display: none;
    margin: 1vw 0.5vw 1.5vw 0.5vw;
    grid-template-columns: repeat(4, auto);
  }

  .items .game-button {
    grid-row: 1;
    margin: 0 0.5vw 1vw 1vw;

    transition: scale 0.1s;

    &:hover {
      scale: 1.05;
    }
  }
  .items .game-button + .game-button {
    margin-left: 0;
  }

  .items .game-toggle {
    grid-column: 1 / -1;
    margin: 0 0 0.5vw 0;
    padding: 0 1vw 0 1vw;
  }

  .items,
  .game-button + .game-toggle {
    border-top: 1px solid #ddd;
    padding-top: 1vw;
  }

  .game-button.backtomenu {
    background: #e1f0c1;
    background: #bdcfe6;
    background: #1d4a85;
    fill: #fff;
  }

  /*
  .game-button.restart {
    background: #63851d;
    fill: #fff;
  }
  */

  &.expanded {
    .items {
      display: grid;
    }
  }
}

.tile-stack {
  .grid-display {
    z-index: 1000;
  }
  .tile-outline {
    stroke: #ddd;
  }
  .tile-on-stack {
    z-index: 0;
    position: relative;
    aspect-ratio: 1/1;

    max-height: 18vh;

    transition-property: scale;
    transition-duration: 100ms;
    svg {
      width: 100%;
      aspect-ratio: 1/1;
    }
    .rotatable {
      position: relative;
      width: 100%;
      height: 100%;
      &.animated {
        transition: rotate 300ms ease;
      }
    }
    &.dragging {
      z-index: 100;
      .rotatable.animated {
        transition: rotate 200ms;
      }
    }
    &.drag-return .rotatable {
      z-index: 100;
      transition-property: translate, scale;
      transition-duration: 150ms;
    }
    &.drag-success .rotatable {
      transition-property: none;
    }
  }
}

.tile-counter {
  font-size: 1.5vw;
  flex-grow: 2;
}

.score-display .score {
  flex-grow: 1;
  margin: 10% 10% 3vw 10%;
  box-sizing: border-box;
  padding: 4% 0 7% 0;
  border-radius: 2vw;
  border: 3px solid #63851d;
  background: #e1f0c1;
  color: #63851d;
  opacity: 0.5;
  font-size: min(4vw, 5vh);
  text-align: center;

  &.animate {
    animation-name: score-display-anim;
    animation-duration: 1000ms;
  }

  p {
    margin: 0;
    padding: 0;
  }
}
@keyframes score-display-anim {
  0% {
    opacity: 0.5;
    transform: scale(1);
  }
  50% {
    opacity: 1;
    transform: scale(1.1);
  }
  100% {
    opacity: 0.5;
    transform: scale(1);
  }
}

@media screen and (orientation: portrait) {
  .screen.game-display {
    display: grid;
    grid-template-columns: 5vw 60vw 1fr;
    grid-template-rows: 1fr max(20vw, 40px);
    grid-template-areas:
      "main-grid main-grid main-grid"
      "fill tile-stack counters";

    .tile-stack {
      flex-direction: row;
      justify-content: center;
      .tile-on-stack {
        max-height: 100%;
        height: 100%;
        max-width: 25vw;
      }
    }

    .tile-counter-and-score {
      flex-direction: row;
      align-items: center;
    }

    .tile-counter {
      font-size: 2.5vw;
    }

    .score-display {
      padding-right: 15%;
    }

    .score-display .score {
      margin: 0;
      border-radius: 2vw;
      font-size: 7vw;
      width: 15vw;
    }
  }
}
