

@font-face {
  font-family: 'Source Sans 3';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: url(fonts/source-sans-3-latin-400.woff) format('woff2');
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
}


body {
  background: #ddd;
  margin: 0;
  padding: 0;
  font-family: 'Source Sans 3', sans-serif;
  -webkit-user-select: none;
  user-select: none;
  touch-action: none;
}
div, p, input, span {
  -webkit-user-select: none;
  user-select: none;
  touch-action: none;
}

#tile-stack-container {
  position: absolute;
  right: 0;
  top: 0;
  width: 150px;
  height: 100%;
  padding-top: 350px;
  background: #ccc;
  z-index: 1000;
}
#tile-stack {
  position: absolute;
  margin: 8px;
  top: 50px;
  left: 50px;
  z-index: 1000;
  height: 300px;
}
#scoreboard {
  margin: 8px;
  text-align: center;
}
#scoreboard div {
  margin: 0 0 8px 0;
  padding: 4px 0 4px 0;
  background: #9acd32;
  border-radius: 10px;
}
#scoreboard div.turn {
  border: 3px solid rgba(0,0,0, 0.5);
  margin: -3px -3px 5px -3px;
}
#scoreboard div .name {
  display: block;
  padding-bottom: 2px;
  font-size: 12px;
}
#scoreboard div .points {
  display: block;
  font-size: 25px;
}
#instructions {
  font-size: 12px;
  padding: 8px;
  color: #333;
}
#instructions input[type="button"] {
  width: 80px;
  margin: 20px 0;
}

#tile-board-container {
  position: absolute;
  top: 0;
  left: 0;
  width: 0;
  height: 0;
}
#tile-board {
  position: absolute;
  top: 0;
  left: 0;
}
#tile-board.animated {
  transition: top 200ms ease-in-out, left 200ms ease-in-out, transform 200ms ease-in-out;
}


.tile-grid {
  position: relative;
  transform: scale(0.2);
  transform-origin: top left;
}
.tile {
  position: absolute;
  transition: transform 200ms ease-in-out;
}
.score-graph-overlay {
  position: absolute;
}

svg {
  display: block;
}

svg .tile-segments {
  clip-path: inset(2px round 10px);
  clip-path: inset(4px round 10px);
}


.tile.dragging {
  z-index: 100;
  transition: none;
}

.tile .rot90, .tile .rot180,
.tile .rot270, .tile .rot360 {
  transition: transform 100ms ease;
}
.tile .rot90  { transform: rotate(90deg); }
.tile .rot180 { transform: rotate(180deg); }
.tile .rot270 { transform: rotate(270deg); }
.tile .rot360 { transform: rotate(360deg); }


.placeholder .tile-segment {
  fill: #ccc;
  transition: fill 500ms ease-in-out;
}
.placeholder.drop-hint-would-fit .tile-segment {
  fill: #cec;
}
.placeholder.drop-hint-would-not-fit .tile-segment {
  fill: #ecc;
}
.game-finished .placeholder .tile-segment {
  display: none;
}

.top-r    .tile-segment.top    { fill: red; }
.top-p    .tile-segment.top    { fill: black; }
.top-b    .tile-segment.top    { fill: blue; }
.top-w    .tile-segment.top    { fill: white; }
.right-r  .tile-segment.right  { fill: red; }
.right-p  .tile-segment.right  { fill: black; }
.right-b  .tile-segment.right  { fill: blue; }
.right-w  .tile-segment.right  { fill: white; }
.bottom-r .tile-segment.bottom { fill: red; }
.bottom-p .tile-segment.bottom { fill: black; }
.bottom-b .tile-segment.bottom { fill: blue; }
.bottom-w .tile-segment.bottom { fill: white; }
.left-r   .tile-segment.left   { fill: red; }
.left-p   .tile-segment.left   { fill: black; }
.left-b   .tile-segment.left   { fill: blue; }
.left-w   .tile-segment.left   { fill: white; }






.gridDisplay.animated {
  transition-property: all;
  transition-duration: 400ms;
}

.gameDisplay {
  position: absolute;
  top: 0;
  left: 0;
  overflow: hidden;
  display: flex;
  flex-direction: row;
  height: 100%;
  width: 100%;
  box-shadow: inset 0 0 40px rgb(0 0 0 / 20%);
}
.mainGridContainer {
  width: auto;
  position: relative;
  flex-grow: 1;
}
.controlbar {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  width: 150px;
  background: #bbb;
  height: 100%;
  text-align: center;
  z-index: 1000;
}
.tileStackDisplay {
  order: 1;
  flex-grow: 1;
  margin: 10px 0 0 0;
}
.scoreDisplay {
  order: 2;
}
.gameDisplay-buttons {
  order: 3;
  margin: 0 0 10px 0;
  display: flex;
  flex-direction: row;
}
.gameDisplay-toggles {
  order: 4;
  margin: 0 0 20px 0;
}

.gameDisplay-buttons .game-button {
  padding: 10px 10px;
  cursor: pointer;
}
.gameDisplay-buttons .game-button svg {
  width: 46px;
  height: 46px;
  transform: scale(1);
  transition-property: tranform;
  transition-duration: 100ms;
  fill: #777777;
}
@media (hover) {
  .gameDisplay-buttons .game-button:hover svg {
    transform: scale(1.1);
    fill: #555;
  }
}

.gameDisplay-toggles {
  display: flex;
  flex-direction: row;
  justify-content: center;
}
.gameDisplay-toggles .game-toggle {
  padding: 5px;
  cursor: pointer;
  background: #aaa;
  margin: 4px;
  border-radius: 6px;

  transform: scale(1);
  transition-property: tranform;
  transition-duration: 100ms;
  fill: #777;
}
.gameDisplay-toggles .game-toggle svg {
  width: 23px;
  height: 23px;
}
.gameDisplay-toggles .game-toggle.enabled {
  background: #777;
  fill: #bbb;
}
@media (hover) {
  .gameDisplay-toggles .game-toggle:hover {
    transform: scale(1.1);
    background: #aaa;
    fill: #444;
  }
  .gameDisplay-toggles .game-toggle.enabled:hover {
    background: #444;
    fill: #ccc;
  }
}



.mainGridContainer .gridDisplay,
.patternEditorGridContainer .gridDisplay,
.tileEditorGridContainer .gridDisplay {
  position: absolute;
  top: 0px;
  left: 0px;
  z-index: 1000;
}

.editorDisplay {
  position: absolute;
  top: 0;
  left: 0;
  overflow: hidden;
  display: flex;
  flex-direction: row;
  height: 100%;
  width: 100%;
}
.tileEditorGridContainer {
  order: 1;
  width: auto;
  position: relative;
  flex-grow: 1;
  overflow: hidden;
}
.patternEditorGridContainer {
  border-left: 1px solid #000;
  order: 2;
  width: auto;
  position: relative;
  flex-grow: 1;
  overflow: hidden;
}
.editorDisplay .controlbar {
  order: 3;
}


.tileStackDisplay {
  margin: 10px 0;
  padding: 0 15px;
  box-sizing: border-box;
  width: 100%;
}
.tileStackDisplay .tileStackDisplay-counter {
  margin: 10px;
  color: #555;
}
.tileStackDisplay .tile-outline {
  stroke: #ddd;
}
.tileStackDisplay .tileOnStack {
  margin: 5px 0;
  z-index: 0;
  transition: none;
  position: relative;
  aspect-ratio: 1/1;
}
.tileStack-gridDisplay {
  position: absolute;
}
.tileOnStack-rotatable {
  position: relative;
  width: 100%;
  height: 100%;
}
.tileStackDisplay .tileOnStack.dragging {
  z-index: 100;
  transition: none;
}
.tileStackDisplay .tileOnStack.drag-return {
  z-index: 100;
  transition-property: transform;
  transition-duration: 150ms;
}
.tileStackDisplay .tileOnStack.drag-success {
  transition-property: none;
}

.tileOnStack-rotatable.animated {
  transition: transform 400ms ease;
}
.tileOnStack.dragging .tileOnStack-rotatable.animated {
  transition: transform 200ms;
}



.scoreDisplay {
  width: 100px;
  margin: 0 0 10px 0;
  box-sizing: border-box;
  padding: 10px 0 10px 0;
  border-radius: 20px;
  border: 8px solid #63851d;
  background: #e1f0c1;
  color: #63851d;
  opacity: 0.5;
  /*
  background: #ccc;
  border: 8px solid #777;
  */
  font-size: 32px;
  text-align: center;
}
.scoreDisplay.animate {
  animation-name: scoreDisplay-opacity-anim;
  animation-duration: 1000ms;
}
.scoreDisplay p {
  margin: 0;
  padding: 0;
}
@keyframes scoreDisplay-opacity-anim {
  0% { opacity: 0.5; transform: scale(1.0); }
  50% { opacity: 1.0; transform: scale(1.1); }
  100% { opacity: 0.5; transform: scale(1.0); }
}


.horizontal-controls .controlbar {
  position: absolute;
  left: 0;
  bottom: 0;
  height: 120px;
  width: 100%;
}
.horizontal-controls .scoreDisplay {
  position: absolute;
  right: 10px;
  bottom: initial;
  margin: 25px 20px 20px 20px;
  margin-top: 25px;
  width: 100px;
}
.horizontal-controls .tileStackDisplay {
  position: absolute;
  top: 0px;
  left: 0px;
  width: 100%;
  text-align: center;
}


.svg-scoreOverlay-mask.disabled {
  display: none;
}
.svg-scoreOverlay-mask.enabled {
  animation-duration: 1s;
  animation-name: scoreOverlay-opacity;
  opacity: 0;
}
@keyframes scoreOverlay-opacity {
  0% {
    opacity: 0;
  }
  30% {
    opacity: 0.3;
  }
  70% {
    opacity: 0.3;
  }
  100% {
    opacity: 0;
  }
}

.svg-scoreOverlay {
  transition-property: opacity;
  transition-duration: 300ms;
  transition-delay: 200ms;
  opacity: 0;
}
.svg-scoreOverlay.disabled {
  display: none;
}
.svg-scoreOverlay.hiding {
  opacity: 0;
  transition-duration: 500ms;
  transition-delay: 500ms;
}
.svg-scoreOverlay.enabled {
  opacity: 1;
}
.svg-scoreOverlay.enabled .scoreOverlay-outlineFG g {
  stroke-dasharray: 6000 6000;
  stroke-dashoffset: -6000;

  animation-name: scoreOverlay-outlineFG-anim;
  animation-duration: 2s;
  animation-delay: 400ms;
  animation-timing-function: ease-in;
  animation-fill-mode: forwards;
}
@keyframes scoreOverlay-outlineFG-anim {
  0% {
    stroke-dashoffset: -6000;
  }
  100% {
    stroke-dashoffset: -12000;
  }
}
.svg-scoreOverlay.hiding .scoreOverlay-outlineFG g {
  stroke-dasharray: 6000 6000;
  stroke-dasharray: -12000;

  animation-name: scoreOverlay-outlineFG-anim-reverse;
  animation-duration: 1s;
  animation-timing-function: ease-in;
  animation-fill-mode: forwards;
}
@keyframes scoreOverlay-outlineFG-anim-reverse {
  0% {
    stroke-dashoffset: -12000;
  }
  100% {
    stroke-dashoffset: -18000;
  }
}
.svg-scoreOverlay.enabled .points {
  animation-name: scoreOverlay-points-opacity-anim;
  animation-duration: 800ms;
  animation-fill-mode: forwards;
  opacity: 0;
}
.svg-scoreOverlay circle.points {
  stroke-dasharray: 200 200;
}
.svg-scoreOverlay.enabled circle.points {
  animation-delay: 500ms;
}
.svg-scoreOverlay.enabled text.points {
  animation-delay: 600ms;
}
.svg-scoreOverlay.hiding .points {
  animation-name: scoreOverlay-points-opacity-anim-reverse;
  animation-duration: 400ms;
  animation-fill-mode: both;
}
.svg-scoreOverlay.hiding circle.points {
  animation-delay: 100ms;
}
.svg-scoreOverlay.hiding text.points {
  animation-delay: 0ms;
}
@keyframes scoreOverlay-points-opacity-anim {
  0% {
    opacity: 0;
    stroke-dashoffset: -200;
  }
  25% {
    stroke-dashoffset: -200;
  }
  75% {
    opacity: 100;
  }
  100% {
    opacity: 100;
    stroke-dashoffset: -400;
  }
}
@keyframes scoreOverlay-points-opacity-anim-reverse {
  0% {
    opacity: 100;
    stroke-dashoffset: -400;
  }
  25% {
    opacity: 100;
  }
  75% {
    stroke-dashoffset: -600;
  }
  100% {
    opacity: 0;
    stroke-dashoffset: -600;
  }
}

.svg-scoreOverlay.enabled .scoreOverlay-mask path,
.svg-scoreOverlay.enabled .scoreOverlay-outlineBG path {
  animation-name: scoreOverlay-stroke-width;
  animation-duration: 300ms;
  animation-fill-mode: forwards;
}
.svg-scoreOverlay.hiding .scoreOverlay-mask path,
.svg-scoreOverlay.hiding .scoreOverlay-outlineBG path {
  animation-name: scoreOverlay-stroke-width-reverse;
  animation-duration: 300ms;
  animation-delay: 500ms;
  animation-fill-mode: forwards;
  stroke-width: 10px;
}
@keyframes scoreOverlay-stroke-width {
  0% { stroke-width: 1px }
  100% { stroke-width: 10px }
}
@keyframes scoreOverlay-stroke-width-reverse {
  0% { stroke-width: 10px }
  100% { stroke-width: 1px }
}

.svg-tile {
  transition-property: opacity;
  transition-duration: 100ms;
}
.svg-tile.hide,
.tileDisplay.hidden {
  opacity: 0;
}
.svg-tile.highlight-hint-notok {
  opacity: 0;
}

.mainMenuDisplay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center
  box-shadow: inset 0 0 40px rgb(0 0 0 / 20%);
}
.gameList {
  display: flex;
  flex-direction: row;
  margin: auto auto;
  flex-grow: 1;
  align-items: center;
  width: 80%;
}
.gameList-exampleTile {
  position: relative;
  margin: 10px;
  width: 100%;
  aspect-ratio: 1/1;
  cursor: pointer;
  transform: scale(1.0);
  transition-property: transform;
  transition-duration: 100ms;
  flex-grow: 1;
}
.gameList-exampleTile:hover {
  transform: scale(1.1);
}

.mainMenuDisplay,
.gameDisplay {
  animation-name: animate-appear;
  animation-delay: 100ms;
  animation-duration: 500ms;
  animation-fill-mode: backwards;
}
.mainMenuDisplay.disappear,
.gameDisplay.disappear {
  animation-name: animate-disappear;
  animation-delay: 100ms;
  animation-duration: 500ms;
  animation-fill-mode: forwards;
}

@keyframes animate-appear {
  0% { opacity: 0 }
  100% { opacity: 100 }
}
@keyframes animate-disappear {
  0% { opacity: 100 }
  100% { opacity: 0 }
}


@media screen and (orientation: portrait) {
  
  .gameDisplay {
    flex-direction: column;
  }
  .mainGridContainer {
    height: auto;
  }
  .controlbar {
    flex-direction: row;
    width: auto;
    height: 150px;
  }
  .scoreDisplay {
    margin: 0 10px 0 0;
  }
  .tileStackDisplay {
    margin: 0 0 0 10px;
    padding: 10px 0;
    box-sizing: border-box;
    width: auto;
    height: 100%;
  }
  .tileStackDisplay .tileOnStack {
    display: inline-block;
    margin: 0 5px;
    height: 100%;
  }
  .tileStackDisplay-counter {
    display: none;
  }
  .gameDisplay-buttons {
    margin: 0;
    flex-direction: column;
  }
  .gameDisplay-toggles {
    flex-direction: column;
    margin: 0 20px 0 0;
  }

}

@media screen and (orientation: portrait) and (max-width: 740px) {
  .gameDisplay-buttons .game-button {
    display: block;
    padding: 10px 20px;
  }
  .gameDisplay-buttons .game-button svg {
    width: 33px;
    height: 33px;
  }
}