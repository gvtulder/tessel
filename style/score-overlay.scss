@use "./sizes.scss";

.svg-score-overlay-mask {
  &.disabled {
    display: none;
  }
  &.enabled {
    animation-duration: 1s;
    animation-name: score-overlay-opacity;
    opacity: 0;
  }
}
@keyframes score-overlay-opacity {
  0% {
    opacity: 0;
  }
  30% {
    opacity: 0.3;
  }
  70% {
    opacity: 0.3;
  }
  100% {
    opacity: 0;
  }
}

.svg-score-overlay {
  transition-property: opacity;
  transition-duration: 300ms;
  transition-delay: 200ms;
  opacity: 0;

  .outline-bg {
    stroke: var(--cutout-outline-bg-color);
  }

  .outline-fg {
    stroke: var(--cutout-outline-fg-color);
  }

  circle.points {
    stroke-dasharray: calc(6 * sizes.$svg-scale) calc(6 * sizes.$svg-scale);
    fill: var(--cutout-circle-points-fill-color);
    stroke: var(--cutout-circle-points-stroke-color);
  }

  &.disabled {
    display: none;
  }
  &.enabled {
    opacity: 1;
  }
  &.hiding {
    opacity: 0;
    transition-duration: 500ms;
    transition-delay: 500ms;
  }

  &.enabled {
    .points {
      animation-name: score-overlay-points-opacity-anim;
      animation-duration: 800ms;
      animation-fill-mode: forwards;
      opacity: 0;
    }
    circle.points {
      animation-delay: 500ms;
    }
    text.points {
      animation-delay: 600ms;
    }
  }
  &.hiding {
    .points {
      animation-name: score-overlay-points-opacity-anim-reverse;
      animation-duration: 400ms;
      animation-fill-mode: both;
    }
    circle.points {
      animation-delay: 100ms;
    }
    text.points {
      animation-delay: 0ms;
    }
  }

  &.enabled {
    .score-outline-outline-fg {
      stroke-dasharray: calc(60 * sizes.$svg-scale) calc(60 * sizes.$svg-scale);
      stroke-dashoffset: calc(-60 * sizes.$svg-scale);

      animation-name: score-overlay-outline-fg-anim;
      animation-duration: 2s;
      animation-delay: 400ms;
      animation-timing-function: ease-in;
      animation-fill-mode: forwards;
    }
    .score-outline-shadow-mask,
    .score-outline-outline-bg {
      animation-name: score-overlay-stroke-width;
      animation-duration: 300ms;
      animation-fill-mode: forwards;
    }
  }
  &.hiding {
    .score-outline-outline-fg {
      stroke-dasharray: calc(60 * sizes.$svg-scale) calc(60 * sizes.$svg-scale);
      stroke-dashoffset: calc(-120 * sizes.$svg-scale);

      animation-name: score-overlay-outline-fg-anim-reverse;
      animation-duration: 1s;
      animation-timing-function: ease-in;
      animation-fill-mode: forwards;
    }
    .score-outline-shadow-mask,
    .score-outline-outline-bg {
      animation-name: scoreOverlay-stroke-width-reverse;
      animation-duration: 300ms;
      animation-delay: 500ms;
      animation-fill-mode: forwards;
      stroke-width: calc(0.1px * sizes.$svg-scale);
    }
  }
}

@keyframes score-overlay-outline-fg-anim {
  0% {
    stroke-dashoffset: calc(-60 * sizes.$svg-scale);
  }
  100% {
    stroke-dashoffset: calc(-120 * sizes.$svg-scale);
  }
}
@keyframes score-overlay-outline-fg-anim-reverse {
  0% {
    stroke-dashoffset: calc(-120 * sizes.$svg-scale);
  }
  100% {
    stroke-dashoffset: calc(-60 * sizes.$svg-scale);
  }
}
@keyframes score-overlay-points-opacity-anim {
  0% {
    opacity: 0;
    stroke-dashoffset: calc(-6 * sizes.$svg-scale);
  }
  25% {
    stroke-dashoffset: calc(-6 * sizes.$svg-scale);
  }
  75% {
    opacity: 100;
  }
  100% {
    opacity: 100;
    stroke-dashoffset: calc(-12 * sizes.$svg-scale);
  }
}
@keyframes score-overlay-points-opacity-anim-reverse {
  0% {
    opacity: 100;
    stroke-dashoffset: calc(-4 * sizes.$svg-scale);
  }
  25% {
    opacity: 100;
  }
  75% {
    stroke-dashoffset: calc(-6 * sizes.$svg-scale);
  }
  100% {
    opacity: 0;
    stroke-dashoffset: calc(-6 * sizes.$svg-scale);
  }
}
@keyframes score-overlay-stroke-width {
  0% {
    stroke-width: calc(0.01px * sizes.$svg-scale);
  }
  100% {
    stroke-width: calc(0.1px * sizes.$svg-scale);
  }
}
@keyframes score-overlay-stroke-width-reverse {
  0% {
    stroke-width: calc(0.1px * sizes.$svg-scale);
  }
  100% {
    stroke-width: calc(0.01px * sizes.$svg-scale);
  }
}
