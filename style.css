/*
@font-face {
  font-family: 'Source Sans 3';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: url(fonts/source-sans-3-latin-400.woff) format('woff2');
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
}
*/

@font-face {
  font-family: "Barlow";
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: url(fonts/barlow-latin-400.woff) format("woff2");
  unicode-range:
    U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC,
    U+0304, U+0308, U+0329, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193,
    U+2212, U+2215, U+FEFF, U+FFFD;
}

body {
  background: #ddd;
  margin: 0;
  padding: 0;
  font-family: "Barlow", sans-serif;
  -webkit-user-select: none;
  user-select: none;
  touch-action: none;
}
div,
p,
input,
span {
  -webkit-user-select: none;
  user-select: none;
  touch-action: none;
}

svg {
  display: block;
}

.version {
  position: absolute;
  right: 10px;
  bottom: 10px;
  color: #aaa;
  font-size: 12px;
}

.gridDisplay.animated {
  transition-property: all;
  transition-duration: 400ms;
}

.gameDisplay {
  position: absolute;
  top: 0;
  left: 0;
  overflow: hidden;
  height: 100%;
  width: 100%;
  box-shadow: inset 0 0 40px rgb(0 0 0 / 20%);
  background: #ddd;
  display: grid;

  grid-template-columns: 1fr 150px;
  grid-template-rows: 1fr min-content min-content;
  grid-template-areas:
    "main-grid tile-stack"
    "main-grid score-box"
    "main-grid controls";
}
.mainGridContainer {
  grid-area: main-grid;
}
.controlbar {
  grid-area: controls;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  background: #bbb;
  text-align: center;
  z-index: 1000;
}
.tileStackDisplay {
  grid-area: tile-stack;
  background: #bbb;
  display: flex;
  flex-direction: column;
  justify-content: center;
}
.scoreDisplayContainer {
  grid-area: score-box;
  background: #bbb;
}
.gameDisplay-buttons {
  order: 1;
  margin: 0 10px;
  display: flex;
  flex-direction: row;
}
.gameDisplay-toggles {
  order: 2;
  margin: 10px 10px;
}

.gameDisplay-buttons .game-button {
  padding: 10px;
  cursor: pointer;
}
.gameDisplay-buttons .game-button svg {
  width: 100%;
  aspect-ratio: 1 / 1;
  transform: scale(1);
  transition-property: tranform;
  transition-duration: 100ms;
  fill: #777777;
}
@media (hover) {
  .gameDisplay-buttons .game-button:hover svg {
    transform: scale(1.1);
    fill: #555;
  }
}

.gameDisplay-toggles {
  display: flex;
  flex-direction: row;
  justify-content: center;
}
.gameDisplay-toggles .game-toggle {
  padding: 5px;
  cursor: pointer;
  background: #aaa;
  margin: 4px;
  border-radius: 6px;

  transform: scale(1);
  transition-property: tranform;
  transition-duration: 100ms;
  fill: #777;
}
.gameDisplay-toggles .game-toggle svg {
  width: 100%;
  aspect-ratio: 1 / 1;
}
.gameDisplay-toggles .game-toggle.enabled {
  background: #777;
  fill: #bbb;
}
@media (hover) {
  .gameDisplay-toggles .game-toggle:hover {
    transform: scale(1.1);
    background: #aaa;
    fill: #444;
  }
  .gameDisplay-toggles .game-toggle.enabled:hover {
    background: #444;
    fill: #ccc;
  }
}

.gridDisplay,
.gridDisplay .grid,
.gridDisplay .grid svg {
  width: 100%;
  height: 100%;
}
.gridDisplay.animated .svg-grid {
  transition-property: all;
  transition-duration: 400ms;
}

.tileStackDisplay .tileStackDisplay-counter {
  margin: 10px;
  color: #555;
  text-align: center;
}
.tileStackDisplay .tile-outline {
  stroke: #ddd;
}
.tileStackDisplay .tileOnStack {
  z-index: 0;
  position: relative;
  aspect-ratio: 1/1;
  transition-property: scale;
  transition-duration: 100ms;
}
.tileStackDisplay .tileOnStack svg {
  width: 100%;
  aspect-ratio: 1/1;
}
.tileOnStack-rotatable {
  position: relative;
  width: 100%;
  height: 100%;
}
.tileStackDisplay .tileOnStack.dragging {
  z-index: 100;
}
.tileStackDisplay .tileOnStack.drag-return {
  z-index: 100;
  transition-property: translate, scale;
  transition-duration: 150ms;
}
.tileStackDisplay .tileOnStack.drag-success {
  transition-property: none;
}

.tileOnStack-rotatable.animated {
  transition: transform 300ms ease;
}
.tileOnStack.dragging .tileOnStack-rotatable.animated {
  transition: transform 200ms;
}

.scoreDisplay {
  margin: 15px 15px;
  box-sizing: border-box;
  padding: 8px 0 12px 0;
  border-radius: 20px;
  border: 6px solid #63851d;
  background: #e1f0c1;
  color: #63851d;
  opacity: 0.5;
  /*
  background: #ccc;
  border: 8px solid #777;
  */
  font-size: 36px;
  text-align: center;
}
.scoreDisplay.animate {
  animation-name: scoreDisplay-opacity-anim;
  animation-duration: 1000ms;
}
.scoreDisplay p {
  margin: 0;
  padding: 0;
}
@keyframes scoreDisplay-opacity-anim {
  0% {
    opacity: 0.5;
    transform: scale(1);
  }
  50% {
    opacity: 1;
    transform: scale(1.1);
  }
  100% {
    opacity: 0.5;
    transform: scale(1);
  }
}

.svg-scoreOverlay-mask.disabled {
  display: none;
}
.svg-scoreOverlay-mask.enabled {
  animation-duration: 1s;
  animation-name: scoreOverlay-opacity;
  opacity: 0;
}
@keyframes scoreOverlay-opacity {
  0% {
    opacity: 0;
  }
  30% {
    opacity: 0.3;
  }
  70% {
    opacity: 0.3;
  }
  100% {
    opacity: 0;
  }
}

.svg-scoreOverlay {
  transition-property: opacity;
  transition-duration: 300ms;
  transition-delay: 200ms;
  opacity: 0;
}
.svg-scoreOverlay.disabled {
  display: none;
}
.svg-scoreOverlay.hiding {
  opacity: 0;
  transition-duration: 500ms;
  transition-delay: 500ms;
}
.svg-scoreOverlay.enabled {
  opacity: 1;
}
.svg-scoreOverlay.enabled .scoreOverlay-outlineFG g {
  stroke-dasharray: 60 60;
  stroke-dashoffset: -60;

  animation-name: scoreOverlay-outlineFG-anim;
  animation-duration: 2s;
  animation-delay: 400ms;
  animation-timing-function: ease-in;
  animation-fill-mode: forwards;
}
@keyframes scoreOverlay-outlineFG-anim {
  0% {
    stroke-dashoffset: -60;
  }
  100% {
    stroke-dashoffset: -120;
  }
}
.svg-scoreOverlay.hiding .scoreOverlay-outlineFG g {
  stroke-dasharray: 60 60;
  stroke-dasharray: -120;

  animation-name: scoreOverlay-outlineFG-anim-reverse;
  animation-duration: 1s;
  animation-timing-function: ease-in;
  animation-fill-mode: forwards;
}
@keyframes scoreOverlay-outlineFG-anim-reverse {
  0% {
    stroke-dashoffset: -120;
  }
  100% {
    stroke-dashoffset: -180;
  }
}
.svg-scoreOverlay.enabled .points {
  animation-name: scoreOverlay-points-opacity-anim;
  animation-duration: 800ms;
  animation-fill-mode: forwards;
  opacity: 0;
}
.svg-scoreOverlay circle.points {
  stroke-dasharray: 6 6;
}
.svg-scoreOverlay.enabled circle.points {
  animation-delay: 500ms;
}
.svg-scoreOverlay.enabled text.points {
  animation-delay: 600ms;
}
.svg-scoreOverlay.hiding .points {
  animation-name: scoreOverlay-points-opacity-anim-reverse;
  animation-duration: 400ms;
  animation-fill-mode: both;
}
.svg-scoreOverlay.hiding circle.points {
  animation-delay: 100ms;
}
.svg-scoreOverlay.hiding text.points {
  animation-delay: 0ms;
}
@keyframes scoreOverlay-points-opacity-anim {
  0% {
    opacity: 0;
    stroke-dashoffset: -6;
  }
  25% {
    stroke-dashoffset: -6;
  }
  75% {
    opacity: 100;
  }
  100% {
    opacity: 100;
    stroke-dashoffset: -12;
  }
}
@keyframes scoreOverlay-points-opacity-anim-reverse {
  0% {
    opacity: 100;
    stroke-dashoffset: -4;
  }
  25% {
    opacity: 100;
  }
  75% {
    stroke-dashoffset: -6;
  }
  100% {
    opacity: 0;
    stroke-dashoffset: -6;
  }
}

.svg-scoreOverlay.enabled .scoreOverlay-mask path,
.svg-scoreOverlay.enabled .scoreOverlay-outlineBG path {
  animation-name: scoreOverlay-stroke-width;
  animation-duration: 300ms;
  animation-fill-mode: forwards;
}
.svg-scoreOverlay.hiding .scoreOverlay-mask path,
.svg-scoreOverlay.hiding .scoreOverlay-outlineBG path {
  animation-name: scoreOverlay-stroke-width-reverse;
  animation-duration: 300ms;
  animation-delay: 500ms;
  animation-fill-mode: forwards;
  stroke-width: 0.1px;
}
@keyframes scoreOverlay-stroke-width {
  0% {
    stroke-width: 0.01px;
  }
  100% {
    stroke-width: 0.1px;
  }
}
@keyframes scoreOverlay-stroke-width-reverse {
  0% {
    stroke-width: 0.1px;
  }
  100% {
    stroke-width: 0.01px;
  }
}

.svg-tile {
  transition-property: opacity;
  transition-duration: 100ms;
}
.svg-tile.hide,
.tileDisplay.hidden {
  opacity: 0;
}
.svg-tile.highlight-hint-notok {
  opacity: 0;
}

.svg-tiles-editorBackgroundFillPattern {
  opacity: 0.3;
  transition-property: opacity;
  transition-duration: 200ms;
}
.dragging-active .svg-tiles-editorBackgroundFillPattern {
  opacity: 0.1;
}

.mainMenuDisplay,
.gameSetupDisplay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
  box-shadow: inset 0 0 40px rgb(0 0 0 / 20%);
  display: flex;
  flex-direction: row;
  align-items: center;
}
.gameList {
  display: grid;
  width: 100%;
  grid-template-columns: 1fr 1fr 1fr 1fr;
  column-gap: 20px;
  row-gap: 20px;
  padding: 10%;
  box-sizing: border-box;
}
.gameList-exampleTile {
  position: relative;
  cursor: pointer;
  transform: scale(1);
  transition-property: transform;
  transition-duration: 100ms;
  aspect-ratio: 1 / 1;
  min-width: 0;
  min-height: 0;
}
.gameList-exampleTile:hover {
  transform: scale(1.1);
}

.gameSetupDisplay .exampleGrid {
  flex-grow: 1;
  width: 50%;
  height: 100%;
}
.gameSetup-gridDisplay {
  width: 100%;
  height: 100%;
}
.gameSetupDisplay .settings {
  flex-grow: 1;
  width: 50%;
  height: 100%;
  background: #bbb;
}
.gameSetupDisplay .setting-row {
  display: flex;
  margin: 10px;
  padding-bottom: 10px;
  flex-wrap: wrap;
  border-bottom: 1px solid #aaa;
}
.gameSetupDisplay .setting-row-option {
  margin: 3px;
  width: 100px;
  height: 100px;
  background: #cacaca;
  border: 3px solid #aaa;
  border-radius: 10px;
  box-sizing: border-box;
  aspect-ratio: 1;
  cursor: pointer;
}
.gameSetupDisplay .setting-row-option.selected,
.gameSetupDisplay .setting-row-option.selected:hover {
  border: 3px solid #66f;
  background: #eee;
}
.gameSetupDisplay .setting-row-option:hover {
  background: #ddd;
}
.gameSetupDisplay .settings .palette {
  padding: 10px;
}

.mainMenuDisplay,
.gameSetupDisplay,
.gameDisplay {
  animation-name: animate-appear;
  animation-delay: 100ms;
  animation-duration: 500ms;
  animation-fill-mode: backwards;
}
.mainMenuDisplay.disappear,
.gameSetupDisplay.disappear,
.gameDisplay.disappear {
  animation-name: animate-disappear;
  animation-delay: 100ms;
  animation-duration: 500ms;
  animation-fill-mode: forwards;
}

@keyframes animate-appear {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 100;
  }
}
@keyframes animate-disappear {
  0% {
    opacity: 100;
  }
  100% {
    opacity: 0;
  }
}

@media screen and (orientation: landscape) and (max-height: 740px) {
  .gameDisplay {
    grid-template-columns: 1fr 120px;
  }
  .gameDisplay-buttons .game-button {
    padding: 5px;
  }
  .scoreDisplay {
    margin: 10px;
    padding: 4px 0 6px 0;
    border-radius: 15px;
    font-size: 30px;
  }
}
@media screen and (orientation: landscape) and (max-height: 650px) {
  .gameDisplay {
    grid-template-columns: 1fr 100px;
  }
  .gameDisplay-buttons .game-button {
    padding: 3px;
  }
  .gameDisplay-toggles {
    margin: 5px 5px;
  }
  .scoreDisplay {
    margin: 10px;
    padding: 4px 0 6px 0;
    border-radius: 15px;
    font-size: 30px;
  }
}
@media screen and (orientation: landscape) and (max-height: 500px) {
  .gameDisplay {
    grid-template-columns: 1fr 100px 40px;
    grid-template-rows: 1fr min-content min-content;
    grid-template-areas:
      "main-grid tile-stack controls"
      "main-grid tile-stack controls"
      "main-grid score-box  controls";
  }
  .controlbar {
    justify-content: end;
    padding: 4px 0;
  }
  .gameDisplay-buttons {
    margin: 5px;
    flex-direction: column;
  }
  .gameDisplay-toggles {
    margin: 5px;
    flex-direction: column;
  }
}
@media screen and (orientation: landscape) and (max-height: 410px) {
  .gameDisplay {
    grid-template-columns: 1fr 90px 40px;
    grid-template-rows: 1fr min-content min-content;
    grid-template-areas:
      "main-grid tile-stack controls"
      "main-grid tile-stack controls"
      "main-grid score-box  score-box";
  }
  .controlbar {
    justify-content: start;
  }
}

@media screen and (orientation: portrait) {
  .gameDisplay {
    grid-template-columns: 1fr max(100px, 15%) max(100px, 20%);
    grid-template-rows: 1fr min(150px, min-content);
    grid-template-areas:
      "main-grid main-grid main-grid"
      "tile-stack score-box controls";
  }
  .tileStackDisplay {
    display: flex;
    flex-direction: row;
    align-items: center;
  }
  .tileStackDisplay .tileStackDisplay-counter {
    display: none;
  }
  .scoreDisplayContainer {
    display: flex;
    flex-direction: column;
    justify-content: center;
  }
}
@media screen and (orientation: portrait) and (max-width: 650px) {
  .gameDisplay-buttons .game-button {
    padding: 3px;
  }
  .gameDisplay-toggles {
    margin: 5px 5px;
  }
}
@media screen and (orientation: portrait) and (max-width: 500px) {
  .gameDisplay {
    grid-template-columns: 1fr max(100px, 15%);
    grid-template-rows: 50px 1fr 100px;
    grid-template-areas:
      "controls controls"
      "main-grid main-grid"
      "tile-stack score-box";
  }
  .gameDisplay-buttons,
  .gameDisplay-toggles {
    height: 75%;
  }
  .gameDisplay-buttons .game-button,
  .gameDisplay-toggles .game-toggle {
    margin: 0 5px;
  }
  .gameDisplay-buttons .game-button svg,
  .gameDisplay-toggles .game-toggle svg {
    height: 100%;
  }
  .scoreDisplay {
    margin: 10px;
    padding: 4px 0 6px 0;
    border-radius: 15px;
    font-size: 20px;
  }
  .controlbar {
    flex-direction: row;
  }
}

@media screen and (max-aspect-ratio: 4.5/3) {
  .mainMenuDisplay {
    justify-content: center;
  }
  .gameList {
    grid-template-columns: 1fr 1fr;
    grid-template-rows: 1fr 1fr;
    width: auto;
    height: 100%;
    padding: 5%;
  }
}

@media screen and (max-aspect-ratio: 1/1) {
  .mainMenuDisplay {
    justify-content: center;
  }
  .gameList {
    grid-template-columns: 1fr 1fr;
    grid-template-rows: 1fr 1fr;
    width: auto;
    height: auto;
    padding: 5%;
  }
}
