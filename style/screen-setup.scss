@use "./sizes.scss";

$setting-row-option-scale: max(
  min(
    calc(min(48vw - sizes.$button-right) / 10),
    calc(min(80vh - sizes.$inset-top - sizes.$inset-bottom) / 11)
  ),
  2rem
);

$setting-row-option-height: max(
  $setting-row-option-scale,
  calc(3.5 * sizes.$font-size)
);

.screen.game-setup {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: var(--panel-bg-color);
  overflow: hidden;
  box-shadow: var(--screen-box-shadow);
  display: grid;
  grid-template-areas: "example heading" "example settings";
  grid-template-columns: 1fr 1fr;
  grid-template-rows:
    calc(sizes.$button-top + sizes.$button-scale + 1.2rem)
    1fr;
}

.screen.game-setup h2 {
  grid-area: heading;
  margin: 0.6rem calc(min(3vw, 2vh) + 0.1 * $setting-row-option-scale);
  padding: 0;
  font-weight: normal;
  font-size: 2rem;
  align-self: flex-end;
}

.screen.game-setup .example-grid {
  position: relative;
  grid-area: example;
  background: var(--main-bg-color);
  box-shadow: var(--screen-box-shadow);
}

.invalid-grid-warning {
  position: absolute;
  top: 3vw;
  left: 3vw;
  top: calc(50% - 0.75 * sizes.$button-scale);
  left: calc(50% - 0.75 * sizes.$button-scale);

  svg {
    width: calc(1.5 * sizes.$button-scale);
    height: calc(1.5 * sizes.$button-scale);
    fill: var(--invalid-grid-warning-color);
    vector-effect: non-scaling-stroke;
  }

  opacity: 0;
  transition: opacity 0.1s;
}
.invalid-grid-warning-active {
  opacity: 1;
  transition: opacity 0.5s;
}

.screen.game-setup .game-button.exit {
  position: absolute;
  right: sizes.$button-right;
  top: sizes.$button-top;
}

.screen.game-setup .game-button.regenerate {
  position: absolute;
  left: sizes.$button-left;
  bottom: sizes.$button-margin-height;
}

.screen.game-setup .button-row {
  grid-row: span 2;
  align-self: center;
  justify-self: center;
}
.screen.game-setup .game-button.play {
  width: min(12vh, max(10vw, 10vh));
  height: min(12vh, max(10vw, 10vh));
  padding: 10px;
  border-radius: 100%;
  background: var(--setup-play-button-bg-color);
  box-shadow: var(--button-box-shadow);
  text-align: center;
  transition: transform 0.1s;
}
.screen.game-setup .game-button.play.disabled {
  background: var(--setup-play-button-bg-disabled-color);
  svg {
    fill: var(--setup-play-button-fg-disabled-color);
  }
}
.screen.game-setup .game-button.play svg {
  display: inline-block;
  fill: var(--setup-play-button-fg-color);
  margin: 16% 0 0 9%;
  width: 65%;
  height: 65%;
}
@media (hover) {
  .screen.game-setup .game-button.play:hover {
    transform: scale(1.1);
  }
  .screen.game-setup .game-button.play.disabled:hover {
    transform: none;
  }
}

.screen.game-setup {
  .settings {
    position: relative;
    grid-area: settings;
    padding-right: calc(
      2 * min(3vw, 2vh) + sizes.$stack-margin-right + sizes.$inset-right
    );
    padding-bottom: calc(sizes.$stack-margin-bottom + sizes.$inset-bottom);
    padding-left: min(3vw, 2vh);
    display: grid;
    grid-template-columns: 1fr 1fr;
    grid-template-rows: min-content min-content min-content 1fr;
    column-gap: min(3vw, 2vh);
    align-content: flex-start;
  }

  .setting-row {
    position: relative;
    align-self: stretch;
    display: flex;
    flex-direction: column;
    margin: 0.6rem 0;
  }
  .setting-row h3 {
    font-size: 1.2rem;
    font-weight: normal;
    margin: 0 0 0.6rem calc(0.1 * $setting-row-option-scale);
    padding: 0;
  }
  .setting-row .option-wrap {
    position: relative;
    height: 100%;
  }

  /* dropdown menu */
  .setting-row .dropdown-wrap {
    display: none;
    position: absolute;
    margin-top: 0.2rem;
    margin-bottom: 0.2rem;
    min-width: 180%;
    z-index: 1000;
    top: 100%;
  }
  .setting-row.upward .dropdown-wrap {
    bottom: 100%;
    top: auto;
  }
  .setting-row:nth-child(even) .dropdown-wrap {
    right: 0;
  }
  .setting-row .dropdown {
    display: grid;
    justify-items: stretch;
    align-content: flex-start;
    grid-template-columns: 1fr 1fr;
    column-gap: calc(0.1 * $setting-row-option-scale);
    row-gap: calc(0.1 * $setting-row-option-scale);
    border-radius: calc(0.4 * $setting-row-option-scale);
    background: var(--settings-option-panel-bg-color);
    box-shadow: var(--dropdown-box-shadow);
    padding: calc(0.1 * $setting-row-option-scale);
    box-sizing: content-box;
  }
  .setting-row.open .dropdown-wrap {
    display: block;
  }
  .setting-row.count2,
  .setting-row.count3,
  .setting-row.count4 {
    .dropdown-wrap {
      width: 100%;
      min-width: 100%;
    }
    .dropdown {
      grid-template-columns: 1fr;
    }
  }
  @media screen and (min-aspect-ratio: 4 / 5) and (max-aspect-ratio: 8 / 5) {
    .setting-row:nth-child(even) {
      .dropdown-wrap {
        width: 100%;
      }
      .dropdown {
        grid-template-columns: 1fr;
      }
    }
  }

  .setting-row-option {
    display: grid;
    grid-template-areas:
      "example description"
      "example description";
    grid-template-columns: $setting-row-option-scale 1fr;
    grid-template-rows: 1fr 1fr;
    column-gap: calc(0.2 * $setting-row-option-scale);
    align-items: center;
    padding-left: calc(0.1 * $setting-row-option-scale);
    min-height: $setting-row-option-height;
    background: var(--settings-option-panel-bg-color);
    border: 2px solid transparent;
    border-radius: calc(0.4 * $setting-row-option-scale);
    box-sizing: border-box;
    cursor: pointer;
    transition: transform 0.1s;
    font-size: 0.9rem;
    @media (hover) {
      &:hover {
        background: var(--settings-option-panel-bg-hover-color);
      }
    }
  }
  @media screen and (max-height: 550px) and (min-aspect-ratio: 8 / 5) {
    .setting-row h3 {
      display: none;
    }
    .setting-row-option {
      min-height: min-content;
    }
  }
  @media screen and (max-height: 500px) and (min-aspect-ratio: 8 / 5) {
    .settings {
      width: 65vw;
    }
  }
  .setting-row-option.current {
    box-shadow: var(--button-box-shadow);
    margin: 0;
    height: 100%;
  }
  .setting-row-option.current.changed {
    animation: 300ms linear setting-row-option-change-anim;
  }
  @keyframes setting-row-option-change-anim {
    0% {
    }
    10% {
      background: var(--settings-option-panel-bg-active-color);
    }
    50% {
      background: var(--settings-option-panel-bg-active-color);
    }
    100% {
    }
  }
  // background: var(--settings-option-panel-bg-active-color);
  .setting-row-option .wrap-grid,
  .setting-row-option > svg {
    grid-area: example;
    width: calc(0.76 * $setting-row-option-scale);
    height: calc(0.76 * $setting-row-option-scale);
    justify-self: center;
  }
  .setting-row-option > svg.palette {
    width: calc(0.66 * $setting-row-option-scale);
    height: calc(0.66 * $setting-row-option-scale);
  }
  .setting-row-option p {
    grid-area: description;
    padding: 0.2rem calc(0.1 * $setting-row-option-scale) 0.4rem 0;
    margin: 0;
  }
  .setting-row-option.selected,
  .setting-row-option.selected:hover {
    border: 2px solid var(--settings-option-panel-border-active-color);
    background: var(--settings-option-panel-bg-active-color);
  }
  circle.checkmark {
    fill: var(--cutout-circle-points-fill-color);
    stroke: var(--cutout-circle-points-stroke-color);
  }

  path.checkmark {
    fill: var(--cutout-circle-points-stroke-color);
  }
}

@media screen and (max-aspect-ratio: 4 / 5) {
  .screen.game-setup {
    grid-template-areas:
      "example"
      "heading"
      "settings";
    grid-template-columns: 1fr;
    grid-template-rows: 1fr min-content min-content;
    justify-content: center;
    align-content: flex-start;
  }

  .screen.game-setup h2 {
    margin: 1.2rem calc(min(3vw, 2vh) + 0.1 * $setting-row-option-scale);
  }

  .screen.game-setup .settings {
    min-height: max(40vh, calc(8 * $setting-row-option-height));
    padding-left: calc(
      min(3vw, 3vh) + sizes.$stack-margin-left + sizes.$inset-left
    );
    padding-right: calc(
      min(3vw, 3vh) + sizes.$stack-margin-right + sizes.$inset-right
    );
  }

  .screen.game-setup .game-button.play {
    width: min(15vw, max(10vw, 10vh));
    height: min(15vw, max(10vw, 10vh));
  }
}

@media screen and (max-width: 400px) and (min-aspect-ratio: 3 / 7) and (max-aspect-ratio: 8 / 10) {
  .screen.game-setup h2 {
    display: none;
  }
  .screen.game-setup .settings {
    min-height: max(30vh, calc(7 * $setting-row-option-height));
  }
}
