@use "./colors.scss";

.screen.game-display {
  display: grid;
  grid-template-columns: 1fr colors.$stack-width calc(
      colors.$stack-margin-right + colors.$inset-right
    );
  grid-template-rows: 2fr min-content 2fr;
  grid-template-areas:
    "main-grid fill fill-end"
    "main-grid tile-stack fill-end"
    "main-grid counters fill-end";

  .main-grid {
    grid-area: main-grid;
  }

  .fill {
    grid-area: fill;
    background: colors.$panel-bg;
  }

  .fill-end {
    grid-area: fill-end;
    background: colors.$panel-bg;
  }

  .tile-stack {
    grid-area: tile-stack;
    background: colors.$panel-bg;
    display: flex;
    flex-direction: column;
    justify-content: center;
  }

  .tile-counter-and-score {
    grid-area: counters;
    background: colors.$panel-bg;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    text-align: center;
  }
}

.dropout-menu {
  $dropout-outer-padding: calc(0.25 * colors.$button-scale);
  $dropout-inner-padding: calc(0.2 * colors.$button-scale);
  $dropout-outer-border-radius: calc(0.75 * colors.$button-scale);

  position: absolute;
  right: colors.$button-right;
  top: colors.$button-top;
  display: flex;
  flex-direction: column;
  align-items: flex-end;
  border-radius: $dropout-outer-border-radius;
  z-index: 10000;

  margin: calc(-1 * $dropout-outer-padding);

  &.expanded {
    background: colors.$dropout-bg;

    .game-button.dropout svg {
      rotate: 90deg;
    }
  }

  .game-button.dropout {
    margin: $dropout-outer-padding $dropout-outer-padding 0 0;
  }

  .game-button.dropout svg {
    transition: rotate 0.1s;
  }

  .items {
    display: none;
    margin: $dropout-inner-padding calc(0.5 * $dropout-inner-padding)
      calc(2 * $dropout-outer-padding) calc(0.5 * $dropout-inner-padding);
    grid-template-columns: auto auto auto auto auto auto;
  }

  .items .game-button {
    grid-row: 1;
    grid-column: span 2;
    margin: 0 calc(0.5 * $dropout-inner-padding) $dropout-inner-padding
      calc(0.5 * $dropout-inner-padding);

    transition: scale 0.1s;

    &.game-button-pressed,
    &:hover {
      scale: 1.05;
    }
  }

  .items .game-toggle {
    grid-column: span 3;
    margin: 0 0 calc(0.5 * $dropout-inner-padding) 0;
    padding: 0 calc(0.5 * $dropout-inner-padding);
  }

  .items,
  .game-button + .game-toggle,
  .game-button + .game-toggle + .game-toggle {
    border-top: 1px solid colors.$panel-bg;
    padding-top: $dropout-inner-padding;
  }

  .game-button.backtomenu {
    background: colors.$home-button-bg;
    fill: colors.$home-button-fg;
  }

  &.expanded {
    .items {
      display: grid;
    }
  }

  .game-finished & {
    .game-toggle {
      display: none;
    }

    .game-button.dropout {
      display: none;
    }

    .items {
      display: flex;
      flex-direction: column;
      margin: $dropout-outer-padding;
      padding: 0;
      border-top: none;
    }

    .game-button {
      margin: 0 0 $dropout-inner-padding 0;
    }

    .game-button.setup {
      display: none;
    }

    .game-button + .game-button {
      margin-left: 0;
    }
  }
}

.tile-stack {
  .grid-display {
    z-index: 1000;
  }
  .tile-outline {
    stroke: colors.$main-bg;
  }
}

.tile-on-stack {
  z-index: 0;
  position: relative;
  aspect-ratio: 1 / 1;

  max-height: 18vh;
  max-width: 100%;

  cursor: grab;

  transition-property: scale;
  transition-duration: 100ms;
  svg {
    width: 100%;
    aspect-ratio: 1 / 1;
  }
  &.tile-dragging {
    cursor: grabbing;
  }
  &.tile-dragging,
  &.tile-drag-return {
    z-index: 100;
  }

  &.appear {
    animation-name: tile-on-stack-appear-anim;
    animation-duration: 0.2s;
    animation-timing-function: linear;
  }
}
@keyframes tile-on-stack-appear-anim {
  0% {
    opacity: 0;
  }
  5% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

.rotatable {
  position: relative;
  width: 100%;
  height: 100%;
  &.animated {
    transition: rotate 300ms ease;
  }
}
.rotatable-dragging.animated {
  transition: rotate 200ms;
}
.rotatable-drag-return.animated {
  z-index: 100;
  transition-property: translate, scale, rotate;
  transition-duration: 150ms;
}
.rotatable-drag-success.animated {
  transition-property: none;
}

.tile-counter {
  font-size: 1.5vw;
  flex-grow: 2;
  cursor: pointer;

  @media screen and (max-aspect-ratio: 3 / 2) {
    span {
      display: block;
      margin: 1em auto;
      width: 4em;
      box-sizing: border-box;
      border: 1px solid #999;
      color: #777;
      border-radius: 0.5vw;
      padding: 1.2em 0;
      aspect-ratio: 1;

      &.wiggle {
        animation-name: tile-counter-wiggle-anim;
        animation-duration: 0.4s;
        animation-iteration-count: 2;
        animation-timing-function: linear;
      }
    }
  }
}
@keyframes tile-counter-wiggle-anim {
  0% {
    rotate: 0deg;
  }
  25% {
    rotate: -10deg;
  }
  75% {
    rotate: 10deg;
  }
  100% {
    rotate: 0deg;
  }
}

.score-display .score {
  flex-grow: 1;
  margin: 10% 10% 3vw 10%;
  box-sizing: border-box;
  padding: 4% 0 7% 0;
  border-radius: 2vw;
  border: 3px solid colors.$score-display-fg;
  background: colors.$score-display-bg;
  color: colors.$score-display-fg;
  opacity: 0.5;
  font-size: min(4vw, 5vh);
  text-align: center;

  &.animate {
    animation-name: score-display-anim;
    animation-duration: 1000ms;
  }

  p {
    margin: 0;
    padding: 0;
  }
}
@keyframes score-display-anim {
  0% {
    opacity: 0.5;
    transform: scale(1);
  }
  50% {
    opacity: 1;
    transform: scale(1.1);
  }
  100% {
    opacity: 0.5;
    transform: scale(1);
  }
}

@media screen and (orientation: portrait) {
  .screen.game-display {
    display: grid;
    grid-template-columns: 5vw 60vw 1fr;
    grid-template-rows: 1fr max(20vw, 40px) calc(
        colors.$stack-margin-bottom + colors.$inset-bottom
      );
    grid-template-areas:
      "main-grid main-grid main-grid"
      "fill tile-stack counters"
      "fill-end fill-end fill-end";

    .tile-stack {
      flex-direction: row;
      justify-content: center;
    }

    .tile-counter-and-score {
      flex-direction: row;
      align-items: center;
    }

    .tile-counter {
      font-size: 2.5vw;
    }

    .score-display {
      padding-right: 15%;
    }

    .score-display .score {
      margin: 0;
      border-radius: 2vw;
      font-size: 7vw;
      width: 15vw;
    }
  }

  .tile-on-stack {
    max-height: 100%;
    height: 100%;
    max-width: 25vw;
  }
}
